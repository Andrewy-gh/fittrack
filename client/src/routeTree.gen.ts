/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as HandlerSplatImport } from './routes/handler.$'
import { Route as AuthWorkoutsIndexImport } from './routes/_auth/workouts/index'
import { Route as AuthExercisesIndexImport } from './routes/_auth/exercises/index'
import { Route as AuthWorkoutsNewImport } from './routes/_auth/workouts/new'
import { Route as AuthWorkoutsWorkoutIdImport } from './routes/_auth/workouts/$workoutId'
import { Route as AuthExercisesExerciseIdImport } from './routes/_auth/exercises/$exerciseId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HandlerSplatRoute = HandlerSplatImport.update({
  id: '/handler/$',
  path: '/handler/$',
  getParentRoute: () => rootRoute,
} as any)

const AuthWorkoutsIndexRoute = AuthWorkoutsIndexImport.update({
  id: '/workouts/',
  path: '/workouts/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthExercisesIndexRoute = AuthExercisesIndexImport.update({
  id: '/exercises/',
  path: '/exercises/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWorkoutsNewRoute = AuthWorkoutsNewImport.update({
  id: '/workouts/new',
  path: '/workouts/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWorkoutsWorkoutIdRoute = AuthWorkoutsWorkoutIdImport.update({
  id: '/workouts/$workoutId',
  path: '/workouts/$workoutId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthExercisesExerciseIdRoute = AuthExercisesExerciseIdImport.update({
  id: '/exercises/$exerciseId',
  path: '/exercises/$exerciseId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/handler/$': {
      id: '/handler/$'
      path: '/handler/$'
      fullPath: '/handler/$'
      preLoaderRoute: typeof HandlerSplatImport
      parentRoute: typeof rootRoute
    }
    '/_auth/exercises/$exerciseId': {
      id: '/_auth/exercises/$exerciseId'
      path: '/exercises/$exerciseId'
      fullPath: '/exercises/$exerciseId'
      preLoaderRoute: typeof AuthExercisesExerciseIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workouts/$workoutId': {
      id: '/_auth/workouts/$workoutId'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof AuthWorkoutsWorkoutIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workouts/new': {
      id: '/_auth/workouts/new'
      path: '/workouts/new'
      fullPath: '/workouts/new'
      preLoaderRoute: typeof AuthWorkoutsNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/exercises/': {
      id: '/_auth/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof AuthExercisesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workouts/': {
      id: '/_auth/workouts/'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof AuthWorkoutsIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthExercisesExerciseIdRoute: typeof AuthExercisesExerciseIdRoute
  AuthWorkoutsWorkoutIdRoute: typeof AuthWorkoutsWorkoutIdRoute
  AuthWorkoutsNewRoute: typeof AuthWorkoutsNewRoute
  AuthExercisesIndexRoute: typeof AuthExercisesIndexRoute
  AuthWorkoutsIndexRoute: typeof AuthWorkoutsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthExercisesExerciseIdRoute: AuthExercisesExerciseIdRoute,
  AuthWorkoutsWorkoutIdRoute: AuthWorkoutsWorkoutIdRoute,
  AuthWorkoutsNewRoute: AuthWorkoutsNewRoute,
  AuthExercisesIndexRoute: AuthExercisesIndexRoute,
  AuthWorkoutsIndexRoute: AuthWorkoutsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/handler/$': typeof HandlerSplatRoute
  '/exercises/$exerciseId': typeof AuthExercisesExerciseIdRoute
  '/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
  '/workouts/new': typeof AuthWorkoutsNewRoute
  '/exercises': typeof AuthExercisesIndexRoute
  '/workouts': typeof AuthWorkoutsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/handler/$': typeof HandlerSplatRoute
  '/exercises/$exerciseId': typeof AuthExercisesExerciseIdRoute
  '/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
  '/workouts/new': typeof AuthWorkoutsNewRoute
  '/exercises': typeof AuthExercisesIndexRoute
  '/workouts': typeof AuthWorkoutsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/handler/$': typeof HandlerSplatRoute
  '/_auth/exercises/$exerciseId': typeof AuthExercisesExerciseIdRoute
  '/_auth/workouts/$workoutId': typeof AuthWorkoutsWorkoutIdRoute
  '/_auth/workouts/new': typeof AuthWorkoutsNewRoute
  '/_auth/exercises/': typeof AuthExercisesIndexRoute
  '/_auth/workouts/': typeof AuthWorkoutsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/handler/$'
    | '/exercises/$exerciseId'
    | '/workouts/$workoutId'
    | '/workouts/new'
    | '/exercises'
    | '/workouts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/handler/$'
    | '/exercises/$exerciseId'
    | '/workouts/$workoutId'
    | '/workouts/new'
    | '/exercises'
    | '/workouts'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/handler/$'
    | '/_auth/exercises/$exerciseId'
    | '/_auth/workouts/$workoutId'
    | '/_auth/workouts/new'
    | '/_auth/exercises/'
    | '/_auth/workouts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  HandlerSplatRoute: typeof HandlerSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  HandlerSplatRoute: HandlerSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/handler/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/exercises/$exerciseId",
        "/_auth/workouts/$workoutId",
        "/_auth/workouts/new",
        "/_auth/exercises/",
        "/_auth/workouts/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/handler/$": {
      "filePath": "handler.$.tsx"
    },
    "/_auth/exercises/$exerciseId": {
      "filePath": "_auth/exercises/$exerciseId.tsx",
      "parent": "/_auth"
    },
    "/_auth/workouts/$workoutId": {
      "filePath": "_auth/workouts/$workoutId.tsx",
      "parent": "/_auth"
    },
    "/_auth/workouts/new": {
      "filePath": "_auth/workouts/new.tsx",
      "parent": "/_auth"
    },
    "/_auth/exercises/": {
      "filePath": "_auth/exercises/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/workouts/": {
      "filePath": "_auth/workouts/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
