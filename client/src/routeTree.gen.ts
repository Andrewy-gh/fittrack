/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as HandlerSplatImport } from './routes/handler.$'
import { Route as LayoutWorkoutsIndexImport } from './routes/_layout/workouts/index'
import { Route as LayoutExercisesIndexImport } from './routes/_layout/exercises/index'
import { Route as LayoutWorkoutsNewImport } from './routes/_layout/workouts/new'
import { Route as LayoutExercisesExerciseIdImport } from './routes/_layout/exercises/$exerciseId'
import { Route as LayoutWorkoutsWorkoutIdIndexImport } from './routes/_layout/workouts/$workoutId/index'
import { Route as LayoutWorkoutsWorkoutIdEditImport } from './routes/_layout/workouts/$workoutId/edit'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HandlerSplatRoute = HandlerSplatImport.update({
  id: '/handler/$',
  path: '/handler/$',
  getParentRoute: () => rootRoute,
} as any)

const LayoutWorkoutsIndexRoute = LayoutWorkoutsIndexImport.update({
  id: '/workouts/',
  path: '/workouts/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExercisesIndexRoute = LayoutExercisesIndexImport.update({
  id: '/exercises/',
  path: '/exercises/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutWorkoutsNewRoute = LayoutWorkoutsNewImport.update({
  id: '/workouts/new',
  path: '/workouts/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExercisesExerciseIdRoute = LayoutExercisesExerciseIdImport.update({
  id: '/exercises/$exerciseId',
  path: '/exercises/$exerciseId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutWorkoutsWorkoutIdIndexRoute =
  LayoutWorkoutsWorkoutIdIndexImport.update({
    id: '/workouts/$workoutId/',
    path: '/workouts/$workoutId/',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutWorkoutsWorkoutIdEditRoute =
  LayoutWorkoutsWorkoutIdEditImport.update({
    id: '/workouts/$workoutId/edit',
    path: '/workouts/$workoutId/edit',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/handler/$': {
      id: '/handler/$'
      path: '/handler/$'
      fullPath: '/handler/$'
      preLoaderRoute: typeof HandlerSplatImport
      parentRoute: typeof rootRoute
    }
    '/_layout/exercises/$exerciseId': {
      id: '/_layout/exercises/$exerciseId'
      path: '/exercises/$exerciseId'
      fullPath: '/exercises/$exerciseId'
      preLoaderRoute: typeof LayoutExercisesExerciseIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workouts/new': {
      id: '/_layout/workouts/new'
      path: '/workouts/new'
      fullPath: '/workouts/new'
      preLoaderRoute: typeof LayoutWorkoutsNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/exercises/': {
      id: '/_layout/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof LayoutExercisesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workouts/': {
      id: '/_layout/workouts/'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof LayoutWorkoutsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workouts/$workoutId/edit': {
      id: '/_layout/workouts/$workoutId/edit'
      path: '/workouts/$workoutId/edit'
      fullPath: '/workouts/$workoutId/edit'
      preLoaderRoute: typeof LayoutWorkoutsWorkoutIdEditImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workouts/$workoutId/': {
      id: '/_layout/workouts/$workoutId/'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof LayoutWorkoutsWorkoutIdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutExercisesExerciseIdRoute: typeof LayoutExercisesExerciseIdRoute
  LayoutWorkoutsNewRoute: typeof LayoutWorkoutsNewRoute
  LayoutExercisesIndexRoute: typeof LayoutExercisesIndexRoute
  LayoutWorkoutsIndexRoute: typeof LayoutWorkoutsIndexRoute
  LayoutWorkoutsWorkoutIdEditRoute: typeof LayoutWorkoutsWorkoutIdEditRoute
  LayoutWorkoutsWorkoutIdIndexRoute: typeof LayoutWorkoutsWorkoutIdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutExercisesExerciseIdRoute: LayoutExercisesExerciseIdRoute,
  LayoutWorkoutsNewRoute: LayoutWorkoutsNewRoute,
  LayoutExercisesIndexRoute: LayoutExercisesIndexRoute,
  LayoutWorkoutsIndexRoute: LayoutWorkoutsIndexRoute,
  LayoutWorkoutsWorkoutIdEditRoute: LayoutWorkoutsWorkoutIdEditRoute,
  LayoutWorkoutsWorkoutIdIndexRoute: LayoutWorkoutsWorkoutIdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/handler/$': typeof HandlerSplatRoute
  '/exercises/$exerciseId': typeof LayoutExercisesExerciseIdRoute
  '/workouts/new': typeof LayoutWorkoutsNewRoute
  '/exercises': typeof LayoutExercisesIndexRoute
  '/workouts': typeof LayoutWorkoutsIndexRoute
  '/workouts/$workoutId/edit': typeof LayoutWorkoutsWorkoutIdEditRoute
  '/workouts/$workoutId': typeof LayoutWorkoutsWorkoutIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/handler/$': typeof HandlerSplatRoute
  '/exercises/$exerciseId': typeof LayoutExercisesExerciseIdRoute
  '/workouts/new': typeof LayoutWorkoutsNewRoute
  '/exercises': typeof LayoutExercisesIndexRoute
  '/workouts': typeof LayoutWorkoutsIndexRoute
  '/workouts/$workoutId/edit': typeof LayoutWorkoutsWorkoutIdEditRoute
  '/workouts/$workoutId': typeof LayoutWorkoutsWorkoutIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/handler/$': typeof HandlerSplatRoute
  '/_layout/exercises/$exerciseId': typeof LayoutExercisesExerciseIdRoute
  '/_layout/workouts/new': typeof LayoutWorkoutsNewRoute
  '/_layout/exercises/': typeof LayoutExercisesIndexRoute
  '/_layout/workouts/': typeof LayoutWorkoutsIndexRoute
  '/_layout/workouts/$workoutId/edit': typeof LayoutWorkoutsWorkoutIdEditRoute
  '/_layout/workouts/$workoutId/': typeof LayoutWorkoutsWorkoutIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/handler/$'
    | '/exercises/$exerciseId'
    | '/workouts/new'
    | '/exercises'
    | '/workouts'
    | '/workouts/$workoutId/edit'
    | '/workouts/$workoutId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/handler/$'
    | '/exercises/$exerciseId'
    | '/workouts/new'
    | '/exercises'
    | '/workouts'
    | '/workouts/$workoutId/edit'
    | '/workouts/$workoutId'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/handler/$'
    | '/_layout/exercises/$exerciseId'
    | '/_layout/workouts/new'
    | '/_layout/exercises/'
    | '/_layout/workouts/'
    | '/_layout/workouts/$workoutId/edit'
    | '/_layout/workouts/$workoutId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  HandlerSplatRoute: typeof HandlerSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  HandlerSplatRoute: HandlerSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/handler/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/exercises/$exerciseId",
        "/_layout/workouts/new",
        "/_layout/exercises/",
        "/_layout/workouts/",
        "/_layout/workouts/$workoutId/edit",
        "/_layout/workouts/$workoutId/"
      ]
    },
    "/handler/$": {
      "filePath": "handler.$.tsx"
    },
    "/_layout/exercises/$exerciseId": {
      "filePath": "_layout/exercises/$exerciseId.tsx",
      "parent": "/_layout"
    },
    "/_layout/workouts/new": {
      "filePath": "_layout/workouts/new.tsx",
      "parent": "/_layout"
    },
    "/_layout/exercises/": {
      "filePath": "_layout/exercises/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/workouts/": {
      "filePath": "_layout/workouts/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/workouts/$workoutId/edit": {
      "filePath": "_layout/workouts/$workoutId/edit.tsx",
      "parent": "/_layout"
    },
    "/_layout/workouts/$workoutId/": {
      "filePath": "_layout/workouts/$workoutId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
