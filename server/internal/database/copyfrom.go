// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateSets implements pgx.CopyFromSource.
type iteratorForCreateSets struct {
	rows                 []CreateSetsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateSets) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateSets) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ExerciseID,
		r.rows[0].WorkoutID,
		r.rows[0].Weight,
		r.rows[0].Reps,
		r.rows[0].SetType,
	}, nil
}

func (r iteratorForCreateSets) Err() error {
	return nil
}

// Batch insert for better performance (optional)
func (q *Queries) CreateSets(ctx context.Context, arg []CreateSetsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"set"}, []string{"exercise_id", "workout_id", "weight", "reps", "set_type"}, &iteratorForCreateSets{rows: arg})
}
