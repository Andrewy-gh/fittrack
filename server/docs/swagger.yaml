basePath: /api
definitions:
  exercise.CreateExerciseRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  exercise.CreateExerciseResponse:
    properties:
      created_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Bench Press
        type: string
      updated_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      user_id:
        example: user-123
        type: string
    required:
    - created_at
    - id
    - name
    - updated_at
    - user_id
    type: object
  exercise.ExerciseResponse:
    properties:
      created_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Bench Press
        type: string
      updated_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      user_id:
        example: user-123
        type: string
    required:
    - created_at
    - id
    - name
    - updated_at
    - user_id
    type: object
  exercise.ExerciseWithSetsResponse:
    properties:
      exercise_id:
        example: 1
        type: integer
      exercise_name:
        example: Bench Press
        type: string
      exercise_order:
        example: 0
        type: integer
      reps:
        example: 10
        type: integer
      set_id:
        example: 1
        type: integer
      set_order:
        example: 1
        type: integer
      set_type:
        example: working
        type: string
      volume:
        example: 2250
        type: integer
      weight:
        example: 225
        type: integer
      workout_date:
        example: "2023-01-01T15:04:05Z"
        type: string
      workout_id:
        example: 1
        type: integer
      workout_notes:
        example: Great workout today
        type: string
    required:
    - exercise_id
    - exercise_name
    - reps
    - set_id
    - set_type
    - volume
    - workout_date
    - workout_id
    type: object
  exercise.RecentSetsResponse:
    properties:
      created_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      exercise_order:
        example: 0
        type: integer
      reps:
        example: 10
        type: integer
      set_id:
        example: 1
        type: integer
      set_order:
        example: 2
        type: integer
      weight:
        example: 225
        type: integer
      workout_date:
        example: "2023-01-01T15:04:05Z"
        type: string
    required:
    - created_at
    - reps
    - set_id
    - workout_date
    type: object
  response.ErrorResponse:
    properties:
      message:
        example: Error message
        type: string
    type: object
  response.SuccessResponse:
    properties:
      success:
        example: true
        type: boolean
    type: object
  workout.CreateWorkoutRequest:
    properties:
      date:
        type: string
      exercises:
        items:
          $ref: '#/definitions/workout.ExerciseInput'
        minItems: 1
        type: array
      notes:
        maxLength: 256
        type: string
    required:
    - date
    - exercises
    type: object
  workout.ExerciseInput:
    properties:
      name:
        maxLength: 256
        minLength: 1
        type: string
      sets:
        items:
          $ref: '#/definitions/workout.SetInput'
        minItems: 1
        type: array
    required:
    - name
    - sets
    type: object
  workout.SetInput:
    properties:
      reps:
        minimum: 1
        type: integer
      setType:
        enum:
        - warmup
        - working
        type: string
      weight:
        minimum: 0
        type: integer
    required:
    - reps
    - setType
    type: object
  workout.UpdateExercise:
    properties:
      name:
        maxLength: 256
        minLength: 1
        type: string
      sets:
        items:
          $ref: '#/definitions/workout.UpdateSet'
        minItems: 1
        type: array
    required:
    - name
    - sets
    type: object
  workout.UpdateSet:
    properties:
      reps:
        minimum: 1
        type: integer
      setType:
        enum:
        - warmup
        - working
        type: string
      weight:
        minimum: 0
        type: integer
    required:
    - reps
    - setType
    type: object
  workout.UpdateWorkoutRequest:
    properties:
      date:
        type: string
      exercises:
        items:
          $ref: '#/definitions/workout.UpdateExercise'
        minItems: 1
        type: array
      notes:
        maxLength: 256
        type: string
    required:
    - date
    - exercises
    type: object
  workout.WorkoutResponse:
    description: Workout response model
    properties:
      created_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      date:
        example: "2023-01-01T15:04:05Z"
        type: string
      id:
        example: 1
        type: integer
      notes:
        example: Great workout today
        type: string
      updated_at:
        example: "2023-01-01T15:04:05Z"
        type: string
      user_id:
        example: user-123
        type: string
    required:
    - created_at
    - date
    - id
    - updated_at
    - user_id
    type: object
  workout.WorkoutWithSetsResponse:
    properties:
      exercise_id:
        example: 1
        type: integer
      exercise_name:
        example: Bench Press
        type: string
      exercise_order:
        example: 0
        type: integer
      reps:
        example: 10
        type: integer
      set_id:
        example: 1
        type: integer
      set_order:
        example: 1
        type: integer
      set_type:
        example: working
        type: string
      volume:
        example: 2250
        type: integer
      weight:
        example: 225
        type: integer
      workout_date:
        example: "2023-01-01T15:04:05Z"
        type: string
      workout_id:
        example: 1
        type: integer
      workout_notes:
        example: Great workout today
        type: string
    required:
    - exercise_id
    - exercise_name
    - reps
    - set_id
    - set_type
    - volume
    - workout_date
    - workout_id
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A fitness tracking application API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FitTrack API
  version: "1.0"
paths:
  /exercises:
    get:
      consumes:
      - application/json
      description: Get all exercises for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/exercise.ExerciseResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: List exercises
      tags:
      - exercises
    post:
      consumes:
      - application/json
      description: Get an existing exercise by name or create it if it doesn't exist
      parameters:
      - description: Exercise data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/exercise.CreateExerciseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exercise.CreateExerciseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Get or create exercise
      tags:
      - exercises
  /exercises/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific exercise with all its sets from workouts. Returns
        empty array when exercise has no sets.
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success (may be empty array)
          schema:
            items:
              $ref: '#/definitions/exercise.ExerciseWithSetsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Get exercise with sets
      tags:
      - exercises
  /exercises/{id}/recent-sets:
    get:
      consumes:
      - application/json
      description: Get the 3 most recent sets for a specific exercise. Returns empty
        array when exercise has no sets.
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success (may be empty array)
          schema:
            items:
              $ref: '#/definitions/exercise.RecentSetsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Get recent sets for exercise
      tags:
      - exercises
  /workouts:
    get:
      consumes:
      - application/json
      description: Get all workouts for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workout.WorkoutResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: List workouts
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: Create a new workout with exercises and sets
      parameters:
      - description: Workout data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/workout.CreateWorkoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Create a new workout
      tags:
      - workouts
  /workouts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific workout and all its associated sets. Only the
        owner of the workout can delete it.
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content - Workout deleted successfully
        "400":
          description: Bad Request - Invalid workout ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized - Invalid token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found - Workout not found or doesn't belong to user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Delete a workout
      tags:
      - workouts
    get:
      consumes:
      - application/json
      description: Get a specific workout with all its sets and exercises
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workout.WorkoutWithSetsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Get workout with sets
      tags:
      - workouts
    put:
      consumes:
      - application/json
      description: Updates a workout using full replacement semantics. The client
        must provide the complete workout data including date and at least one exercise
        with sets. This endpoint replaces the entire workout, deleting existing exercises/sets
        and creating new ones. For partial updates, PATCH will be implemented in a
        future version. Returns 204 No Content on success.
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: integer
      - description: Complete workout data for replacement
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/workout.UpdateWorkoutRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content - Workout updated successfully
        "400":
          description: Bad Request - Invalid input or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized - Invalid token
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found - Workout not found or doesn't belong to user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - StackAuth: []
      summary: Update an existing workout (full replacement)
      tags:
      - workouts
schemes:
- http
securityDefinitions:
  StackAuth:
    in: header
    name: x-stack-access-token
    type: apiKey
swagger: "2.0"
